<?php
/**
 * Generated by Protobuf protoc plugin.
 * File descriptor : PulsarApi.proto
 */


namespace Pulsar\Proto;

/**
 * Protobuf message : pulsar.proto.FeatureFlags
 */
class FeatureFlags extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * supports_auth_refresh optional bool = 1
     *
     * @var bool
     */
    protected $supports_auth_refresh = null;

    /**
     * supports_broker_entry_metadata optional bool = 2
     *
     * @var bool
     */
    protected $supports_broker_entry_metadata = null;

    /**
     * supports_partial_producer optional bool = 3
     *
     * @var bool
     */
    protected $supports_partial_producer = null;

    /**
     * {@inheritdoc}
     */
    public function __construct($stream = null, ?\Protobuf\Configuration $configuration = null)
    {
        $this->supports_auth_refresh = false;
        $this->supports_broker_entry_metadata = false;
        $this->supports_partial_producer = false;

        parent::__construct($stream, $configuration);
    }

    /**
     * Check if 'supports_auth_refresh' has a value
     *
     * @return bool
     */
    public function hasSupportsAuthRefresh()
    {
        return $this->supports_auth_refresh !== null;
    }

    /**
     * Get 'supports_auth_refresh' value
     *
     * @return bool
     */
    public function getSupportsAuthRefresh()
    {
        return $this->supports_auth_refresh;
    }

    /**
     * Set 'supports_auth_refresh' value
     *
     * @param bool $value
     */
    public function setSupportsAuthRefresh($value = null)
    {
        $this->supports_auth_refresh = $value;
    }

    /**
     * Check if 'supports_broker_entry_metadata' has a value
     *
     * @return bool
     */
    public function hasSupportsBrokerEntryMetadata()
    {
        return $this->supports_broker_entry_metadata !== null;
    }

    /**
     * Get 'supports_broker_entry_metadata' value
     *
     * @return bool
     */
    public function getSupportsBrokerEntryMetadata()
    {
        return $this->supports_broker_entry_metadata;
    }

    /**
     * Set 'supports_broker_entry_metadata' value
     *
     * @param bool $value
     */
    public function setSupportsBrokerEntryMetadata($value = null)
    {
        $this->supports_broker_entry_metadata = $value;
    }

    /**
     * Check if 'supports_partial_producer' has a value
     *
     * @return bool
     */
    public function hasSupportsPartialProducer()
    {
        return $this->supports_partial_producer !== null;
    }

    /**
     * Get 'supports_partial_producer' value
     *
     * @return bool
     */
    public function getSupportsPartialProducer()
    {
        return $this->supports_partial_producer;
    }

    /**
     * Set 'supports_partial_producer' value
     *
     * @param bool $value
     */
    public function setSupportsPartialProducer($value = null)
    {
        $this->supports_partial_producer = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ($this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, ?\Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values = array_merge([
            'supports_auth_refresh'          => false,
            'supports_broker_entry_metadata' => false,
            'supports_partial_producer'      => false,
        ], $values);

        $message->setSupportsAuthRefresh($values['supports_auth_refresh']);
        $message->setSupportsBrokerEntryMetadata($values['supports_broker_entry_metadata']);
        $message->setSupportsPartialProducer($values['supports_partial_producer']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'  => 'FeatureFlags',
            'field' => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number'        => 1,
                    'name'          => 'supports_auth_refresh',
                    'type'          => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label'         => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'default_value' => false,
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number'        => 2,
                    'name'          => 'supports_broker_entry_metadata',
                    'type'          => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label'         => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'default_value' => false,
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number'        => 3,
                    'name'          => 'supports_partial_producer',
                    'type'          => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label'         => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'default_value' => false,
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(?\Protobuf\Configuration $configuration = null)
    {
        $config = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream = $context->getStream();
        $writer = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->supports_auth_refresh !== null) {
            $writer->writeVarint($stream, 8);
            $writer->writeBool($stream, $this->supports_auth_refresh);
        }

        if ($this->supports_broker_entry_metadata !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeBool($stream, $this->supports_broker_entry_metadata);
        }

        if ($this->supports_partial_producer !== null) {
            $writer->writeVarint($stream, 24);
            $writer->writeBool($stream, $this->supports_partial_producer);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ( $length !== null )
            ? ( $stream->tell() + $length )
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->supports_auth_refresh = $reader->readBool($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->supports_broker_entry_metadata = $reader->readBool($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->supports_partial_producer = $reader->readBool($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size = 0;

        if ($this->supports_auth_refresh !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->supports_broker_entry_metadata !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->supports_partial_producer !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->supports_auth_refresh = false;
        $this->supports_broker_entry_metadata = false;
        $this->supports_partial_producer = false;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if (!$message instanceof \Pulsar\Proto\FeatureFlags) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->supports_auth_refresh = ( $message->supports_auth_refresh !== null ) ? $message->supports_auth_refresh : $this->supports_auth_refresh;
        $this->supports_broker_entry_metadata = ( $message->supports_broker_entry_metadata !== null ) ? $message->supports_broker_entry_metadata : $this->supports_broker_entry_metadata;
        $this->supports_partial_producer = ( $message->supports_partial_producer !== null ) ? $message->supports_partial_producer : $this->supports_partial_producer;
    }


}

